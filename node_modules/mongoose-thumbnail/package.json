{
  "name": "mongoose-thumbnail",
  "description": "Mongoose plugin adding a thumbnail field to a schema - useful for expressjs image file uploads",
  "version": "0.0.1",
  "homepage": "https://github.com/panta/mongoose-thumbnail",
  "author": {
    "name": "Marco Pantaleoni",
    "email": "marco.pantaleoni@gmail.com"
  },
  "dependencies": {
    "mongoose": ">= 3.0.1",
    "mkdirp": ">= 0.3.4",
    "imagemagick": ">= 0.1.2",
    "temp": ">= 0.4.0",
    "mongoose-file": ">= 0.0.2"
  },
  "devDependencies": {
    "coffee-script": ">= 1.3.3",
    "muffin": ">= 0.6.2",
    "glob": ">= 3.0.1",
    "mocha": ">= 1.4.2",
    "chai": ">= 1.2.0"
  },
  "keywords": [
    "mongoose",
    "plugin",
    "plugins",
    "types",
    "image",
    "picture",
    "thumbnail",
    "file",
    "upload",
    "express"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/panta/mongoose-thumbnail.git"
  },
  "bugs": {
    "url": "https://github.com/panta/mongoose-thumbnail/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/panta/mongoose-thumbnail/master/LICENSE"
    }
  ],
  "directories": {
    "lib": "./lib",
    "test": "./test"
  },
  "scripts": {
    "watch": "coffee -c -w  -o lib src",
    "prepublish": "cake build",
    "test": "NODE_ENV=test node_modules/.bin/mocha --compilers coffee:coffee-script --timeout 10000 -R spec test/*.coffee",
    "posttest": "rm -rf test/uploads"
  },
  "main": "lib/index.js",
  "engines": {
    "node": ">= 0.6.0",
    "npm": ">= 1.0.0"
  },
  "readme": "## About mongoose-thumbnail\n\n[mongoose][] plugin that adds a thumbnail field to a mongoose schema.\nThis is especially suited to handle image file uploads with [nodejs][]/[expressjs][].\n\n## Install\n\nnpm install mongoose-thumbnail\n\n## Usage\n\nThe plugin adds a thumbnail field to the mongoose schema.\nAs it uses [mongoose-file][] internally, the added field has all the `mongoose-file` field sub-properties.\nPlease refer to [mongoose-file][] documentation to understand basic usage.\n\nIn addition to the sub-fields carried by [mongoose-file][], this plugin creates an additional sub-field, named by default `thumb`.\nDepending on the `inline` plugin option, the thumbnail field may contain additional sub-fields containing the thumbnail file properties, or could be a string containing the [Data URI](http://en.wikipedia.org/wiki/Data_URI_scheme) encoded thumbnail.\n\nIn addition those pertaining to [mongoose-file][], the following options are available:\n\n* `thumb` - the name of the thumbnail sub-field (defaults to `thumb`)\n* `format` - the image format for the thumbnail (defaults to `jpg`)\n* `size` - the side size of the thumbnail (by default `96`)\n* `thumb_prefix` - the prefix for the thumbnail files (defaults to `t_`)\n* `inline` - if `true` the thumbnail is not saved to a file but directly in the mongoose document, in the thumbnail sub-field, encoded as a string using the [Data URI scheme](http://en.wikipedia.org/wiki/Data_URI_scheme) (defaults to `false`)\n* `save` - if `true` the model instance is saved after every assignment to the image field (change to the `file` sub-property) (defaults to `true`)\n\nPlease note that this library re-exports also `filePlugin` and `make_upload_to_model`.\n\n### JavaScript\n\n```javascript\nvar mongoose = require('mongoose');\nvar thumbnailPluginLib = require('mongoose-thumbnail');\nvar thumbnailPlugin = thumbnailPluginLib.thumbnailPlugin;\nvar make_upload_to_model = thumbnailPluginLib.make_upload_to_model;\n\n...\n\nvar uploads_base = path.join(__dirname, \"uploads\");\nvar uploads = path.join(uploads_base, \"u\");\n...\n\nvar SampleSchema = new mongoose.Schema({\n  ...\n});\nSampleSchema.plugin(thumbnailPlugin, {\n\tname: \"photo\",\n\tformat: \"png\",\n\tsize: 80,\n\tinline: false,\n\tsave: true,\n\tupload_to: make_upload_to_model(uploads, 'photos'),\n\trelative_to: uploads_base\n});\nvar SampleModel = db.model(\"SampleModel\", SampleSchema);\n```\n\n### [CoffeeScript][]\n\n```coffeescript\nmongoose = require 'mongoose'\nfilePluginLib = require 'mongoose-thumbnail'\nfilePlugin = filePluginLib.filePlugin\nmake_upload_to_model = filePluginLib.make_upload_to_model\n\n...\nuploads_base = path.join(__dirname, \"uploads\")\nuploads = path.join(uploads_base, \"u\")\n...\n\nSampleSchema = new mongoose.Schema\n  ...\nSampleSchema.plugin thumbnailPlugin\n\tname: \"photo\"\n\tformat: \"png\"\n\tsize: 80\n\tinline: false\n\tsave: true\n\tupload_to: make_upload_to_model(uploads, 'photos')\n\trelative_to: uploads_base\nSampleModel = db.model(\"SampleModel\", SampleSchema)\n```\n\n### Using with express\n\n```coffeescript\n\nPictureSchema = new mongoose.Schema\n  title: String\nPictureSchema.plugin thumbnailPlugin\n  name: \"photo\"\n  inline: false\nPicture = db.model(\"Picture\", PictureSchema)\n\n...\n\napp.post \"/upload\", (req, res, next) ->\n  picture = new Picture({title: req.body.title})\n  picture.set('image.file', req.files.image)\n  picture.save (err) ->\n    return next(err)  if (err)\n  res.redirect '/'\n```\n\nNow in a [Jade][] template, you could have something like:\n\n```\n<img src=\"/{{ picture.image.thumb.rel }}\" />\n```\n\nOtherwise, using thumbnail inlining:\n\n```coffeescript\n\nPictureSchema = new mongoose.Schema\n  title: String\nPictureSchema.plugin thumbnailPlugin\n  name: \"photo\"\n  inline: true\nPicture = db.model(\"Picture\", PictureSchema)\n```\n\nthe template would use:\n\n```\n<img src=\"{{ picture.image.thumb }}\" />\n```\n\n## Bugs and pull requests\n\nPlease use the github [repository][] to notify bugs and make pull requests.\n\n## License\n\nThis software is Â© 2012 Marco Pantaleoni, released under the MIT licence. Use it, fork it.\n\nSee the LICENSE file for details.\n\n[mongoose]: http://mongoosejs.com\n[CoffeeScript]: http://jashkenas.github.com/coffee-script/\n[nodejs]: http://nodejs.org/\n[expressjs]: http://expressjs.com\n[Mocha]: http://visionmedia.github.com/mocha/\n[Jade]: http://jade-lang.com\n[mongoose-file]: https://npmjs.org/package/mongoose-file\n[repository]: http://github.com/panta/mongoose-thumbnail\n",
  "_id": "mongoose-thumbnail@0.0.1",
  "dist": {
    "shasum": "9da2a5583d4e7dd540b9e1a2d046f60853411369",
    "tarball": "http://registry.npmjs.org/mongoose-thumbnail/-/mongoose-thumbnail-0.0.1.tgz"
  },
  "_npmVersion": "1.1.61",
  "_npmUser": {
    "name": "panta",
    "email": "marco.pantaleoni+npm@gmail.com"
  },
  "maintainers": [
    {
      "name": "panta",
      "email": "marco.pantaleoni+npm@gmail.com"
    }
  ],
  "_shasum": "9da2a5583d4e7dd540b9e1a2d046f60853411369",
  "_from": "mongoose-thumbnail@",
  "_resolved": "https://registry.npmjs.org/mongoose-thumbnail/-/mongoose-thumbnail-0.0.1.tgz"
}
